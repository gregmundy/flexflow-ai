# FlexFlow AI Workout Generation - Docker Compose Configuration
# This file sets up PostgreSQL 16 and pgAdmin for local development

version: '3.8'

services:
  # PostgreSQL Database Service
  postgres:
    image: postgres:16-alpine
    container_name: flexflow-postgres
    restart: unless-stopped
    
    # Environment variables for PostgreSQL configuration
    environment:
      # Database credentials - matches your drizzle.config.ts defaults
      POSTGRES_DB: flexflow_dev
      POSTGRES_USER: flexflow_user
      POSTGRES_PASSWORD: flexflow_password
      
      # Performance and development settings
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    
    # Port mapping - exposes PostgreSQL on default port 5432
    ports:
      - "5432:5432"
    
    # Volume mounts for data persistence and initialization
    volumes:
      # Persistent data storage
      - postgres_data:/var/lib/postgresql/data
      
      # Custom PostgreSQL configuration for development
      - ./docker/postgres/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      
      # Initialization scripts (runs on first startup)
      - ./docker/postgres/init-db.sql:/docker-entrypoint-initdb.d/01-init-db.sql:ro
      
      # Additional setup scripts
      - ./docker/postgres/setup-extensions.sql:/docker-entrypoint-initdb.d/02-setup-extensions.sql:ro
    
    # Health check to ensure PostgreSQL is ready
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U flexflow_user -d flexflow_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    
    # Resource limits for development environment
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    
    # Custom command to use our PostgreSQL configuration
    command: >
      postgres
      -c config_file=/etc/postgresql/postgresql.conf
      -c log_destination=stderr
      -c logging_collector=off
      -c log_statement=all
      -c log_connections=on
      -c log_disconnections=on

  # pgAdmin - Web-based PostgreSQL administration tool (optional but recommended)
  pgadmin:
    image: dpage/pgadmin4:8.2
    container_name: flexflow-pgadmin
    restart: unless-stopped
    
    # pgAdmin configuration
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@flexflow.local
      PGADMIN_DEFAULT_PASSWORD: admin_password
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    
    # Port mapping - pgAdmin web interface
    ports:
      - "8080:80"
    
    # Volume for pgAdmin data persistence
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      # Pre-configured server connections
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json:ro
    
    # Depends on PostgreSQL service
    depends_on:
      postgres:
        condition: service_healthy
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

# Named volumes for data persistence
volumes:
  # PostgreSQL data volume - survives container recreation
  postgres_data:
    driver: local
    name: flexflow_postgres_data
  
  # pgAdmin data volume - preserves pgAdmin settings
  pgadmin_data:
    driver: local
    name: flexflow_pgadmin_data

# Custom network for service communication (optional, uses default bridge network)
networks:
  default:
    name: flexflow_network
    driver: bridge